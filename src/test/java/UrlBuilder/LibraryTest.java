/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package UrlBuilder;

import static UrlBuilder.Library.*;
import static UrlBuilder.Constant.IXLIB;
import static UrlBuilder.Url.*;

import org.junit.Test;

import java.util.ArrayList;

import static UrlBuilder.Url.Scheme.HTTPS;
import static org.junit.Assert.*;

public class LibraryTest {

  @Test
  public void testLibrary() {
    assert(Library.isTrue());
  }

  @Test
  public void testBasicUrl() {
    ArrayList<Param> queryParams = new ArrayList<>();
    queryParams.add(new Param("w", 320));
    queryParams.add(new Param("h", 640));
    queryParams.add(new Param("fit", "crop"));

    Url u =
        new Url.Builder()
            .scheme(HTTPS)
            .domain("example.imgix.net")
            .path("/images/file.png")
            .params(queryParams)
            .token("secret")
            .build();

    System.out.println(u.repr());

    assertEquals(HTTPS.toString(), u.getScheme());
    assertEquals("example.imgix.net", u.getDomain());
    assertEquals("/images/file.png", u.getPath());
    assertEquals(IXLIB, u.getLib());
  }


  @Test
  public void testHttpsByDefault() {
    // Test the scheme is https by default.
    Url u = new Url.Builder().build();
    assertEquals(HTTPS.toString(), u.getScheme());
  }

  @Test
  public void testEmptyDefaultParams() {
    // Test the default parameters have been initialized
    // to an empty parameter list.
    Url u = new Url.Builder().build();
    assertTrue(u.getParams().isEmpty());
  }
}
